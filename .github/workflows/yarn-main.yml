name: Node Collector - Main Workflow
run-name: ${{ github.actor }} is Collecting Nodi-nessðŸš€
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  Date:
    runs-on: ubuntu-latest
    outputs:
      Date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "Setting Date"
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\nWrote to file:\n$GITHUB_OUTPUT\n"
          echo "Values:"
          cat $GITHUB_OUTPUT

  Collect:
    runs-on: ubuntu-latest
    needs: [Date]
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Set up git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Run yarn with verdaccio
        run: |
          yarn dlx verdaccio &
          sleep 12
          sudo corepack enable
          yarn set version 4.0.2
          npm set registry http://localhost:4873/
          yarn config set npmRegistryServer http://localhost:4873/
          echo -e "\nChecking Connectivity\n"
          curl http://localhost:4873 -o test.html
          sleep 1
          echo -e "\nRunning Yarn"
          yarn install
          echo -e "\nListing ~/.local/share/verdaccio/*"
          ls -Alht ~/.local/share/verdaccio/*

      - name: TARchive verdaccio storage directory
        run: |
          ls -Alht ~/.local/share/verdaccio/storage
          tar -cvzf verdaccio-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz \
            -C ~/.local/share/verdaccio storage \
            | tee verdaccio-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt

      - name: TARchive node_modules directory
        run: |
          ls -lah ${{ github.workspace }}
          tar -cvzf node-modules-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz \
            node_modules yarn.lock package* .yarnrc.yml \
            | tee node-modules-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt

      - name: TARchive node_modules directory
        run: |
          ls -lah ${{ github.workspace }}
          tar -cvzf node-modules-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz \
            node_modules yarn.lock package* .yarnrc.yml \
            | tee node-modules-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt

      - name: TARchive yarn cache directory
        run: |
          ls -lah ${{ github.workspace }}
          tar -cvzf yarn-cache-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz \
            .yarn yarn.lock package* .yarnrc.yml \
            | tee yarn-cache-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt

      - name: Upload verdaccio artifact
        uses: actions/upload-artifact@v4
        with:
          name: verdaccio-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz
          path: verdaccio-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload verdaccio ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: verdaccio-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt
          path: verdaccio-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt
          if-no-files-found: error

      - name: Upload cache artifact
        uses: actions/upload-artifact@v4
        with:
          name: yarn-cache-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz
          path: yarn-cache-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload cache ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: yarn-cache-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt
          path: yarn-cache-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt
          if-no-files-found: error

      - name: Upload modules artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz
          path: node-modules-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload cache ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt
          path: node-modules-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz.txt
          if-no-files-found: error

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      #- name: Update dependency graph
      #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  MakeISO:
    runs-on: ubuntu-latest
    needs: [Date, Collect]
    outputs:
      deleteModules18: ${{ steps.MakeISO.outputs.deleteModules18 }}
      deleteCache18: ${{ steps.MakeISO.outputs.deleteCache18 }}
      deleteModules20: ${{ steps.MakeISO.outputs.deleteModules20 }}
      deleteCache20: ${{ steps.MakeISO.outputs.deleteCache20 }}
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Install mkisofs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mkisofs isomd5sum wget

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Download Node Installers
        run: |
          echo -e "\nDownloading installers\n"
          mkdir runtimes
          cd runtimes
          wget -nv https://nodejs.org/dist/v18.20.4/node-v18.20.4-x64.msi
          wget -nv https://nodejs.org/dist/v18.20.4/node-v18.20.4-win-x64.zip
          wget -nv https://nodejs.org/dist/v20.16.0/node-v20.16.0-x64.msi
          wget -nv https://nodejs.org/dist/v20.16.0/node-v20.16.0-win-x64.zip
          wget -nv https://nodejs.org/dist/v22.5.1/node-v22.5.1-x64.msi
          wget -nv https://nodejs.org/dist/v22.5.1/node-v22.5.1-win-x64.zip
          wget -nv https://nodejs.org/dist/v18.20.4/node-v18.20.4-linux-x64.tar.xz
          wget -nv https://nodejs.org/dist/v20.16.0/node-v20.16.0-linux-x64.tar.xz
          wget -nv https://nodejs.org/dist/v22.5.1/node-v22.5.1-linux-x64.tar.xz

      - name: Show Artifacts
        run: ls -alh *tgz*

      - name: Diff results
        shell: /usr/bin/bash
        run: |
          echo -e "Diff yarn-cache results for 18 to 20\n"
          diff -yad --suppress-blank-empty --suppress-common-lines \
            yarn-cache-18*.txt yarn-cache-20*.txt

          # Case Diff yarn-cache results
          case [ $? ] in
            0)
              echo -e "\nNo Diff results in yarn-cache 18->20"
              echo "deleteCache18=true" >> $GITHUB_OUTPUT
              ;;
            1)
              echo -e "\nDiffs found in yarn-cache 18->20."
              echo "deleteCache18=false" >> $GITHUB_OUTPUT
              ;;
            *)
              echo -e "\nyarn-cache 18->20 diff error!!"
              echo "deleteCache18=false" >> $GITHUB_OUTPUT
              ;;

          diff -yad --suppress-blank-empty --suppress-common-lines \
            node-modules-18*.txt node-modules-20*.txt
          
          # Case Diff node-modules results
          case [ $? ] in
            0)
              echo -e "\nNo Diff results in node-modules 18->20"
              echo -e "Deleting v18"
              rm -f node-modules-18*
              echo "deleteModules18=true" >> $GITHUB_OUTPUT
              ;;
            1)
              echo -e "\nDiffs found in node-modules 18->20."
              echo "deleteModules18=false" >> $GITHUB_OUTPUT
              ;;
            *)
              echo -e "\nnode-modules 18->20 Diff error!!"
              echo "deleteModules18=false" >> $GITHUB_OUTPUT
              ;;
          
          if [ `grep deleteModules18 $GITHUB_OUTPUT` -eq "true"]; then
            echo -e "Deleting modules v18"
            rm -f node-modules-18*
          else
            echo -e "\nDiff results for 18 to 22\n"
            diff -yad --suppress-blank-empty --suppress-common-lines \
              yarn-cache-18*.txt yarn-cache-22*.txt

            case [ $? ] in
              0)
                echo -e "\nNo Diff results for yarn-cache 18->22"
                echo -e "Deleting v18"
                rm -f yarn-cache-18*
                echo "deleteCache18=true" >> $GITHUB_OUTPUT
                ;;
              1)
                echo -e "\nDiffs found in yarn-cache 18->22."
                echo "deleteCache18=false" >> $GITHUB_OUTPUT
                ;;
              *)
                echo -e "\nDiff error in yarn-cache 18->22!!"
                echo "deleteCache18=false" >> $GITHUB_OUTPUT
                ;;
          fi

          diff -yad --suppress-blank-empty --suppress-common-lines \
            node-modules-18*.txt node-modules-22*.txt

          case [ $? ] in
            0)
              echo -e "\nNo Diff results in node-modules 18->22."
              echo -e "Deleting v18"
              rm -f node-modules-18*
              ;;
            1)
              echo -e "\nDiffs found in node-modules 18->22.";;
            *)
              echo -e "\nnode-modules 18->22 diff error!!";;

          echo -e "\nDiff results for 20 to 22\n"
          diff -yad --suppress-blank-empty --suppress-common-lines \
            yarn-cache-20*.txt yarn-cache-22*.txt

          case [ $? ] in
            0)
              echo -e "\nNo Diff results in yarn-cache 20->22"
              echo -e "Deleting v20"
              rm -f yarn-cache-20*
              ;;
            1)
              echo -e "\nDiffs found in yarn-cache 20->22.";;
            *)
              echo -e "\nyarn-cache 20->22 diff error!!";;

          diff -yad --suppress-blank-empty --suppress-common-lines \
            node-modules-20*.txt node-modules-22*.txt
            
          case [ $? ] in
            0)
              echo -e "\nNo Diff results in node-modules 20->22"
              echo -e "Deleting v20"
              rm -f node-modules-20*
              ;;
            1)
              echo -e "\nDiffs found in node-modules 20->22.";;
            *)
              echo -e "\nnode-modules 20->22 diff error!!";;

      # - name: Delete Identicals
      #   run: |
      #     if [ ${{ needs.Date.outputs.deleteModules18 }} ]
      #     echo -e "Deleting v18"
      #         rm -f yarn-cache-18*

      - name: Make ISO
        run: |
          mkisofs -J -R -v -T -l \
            -V '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -A '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -o ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso \
            *tgz* runtimes

      - name: Implant MD5 sum into iso
        run: implantisomd5 ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso

      - name: Generate Hash
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso >>\
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha
          cat ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -alh *.iso*

      - name: Upload iso artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso
          if-no-files-found: error

      - name: Upload iso sha artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha
          if-no-files-found: error

      - name: Diff results
        shell: /usr/bin/bash
        run: |
          echo -e "Diff results for 18 to 20"
          diff -yad --suppress-blank-empty --suppress-common-lines \
            yarn-cache-18*.txt yarn-cache-20*.txt
          diff -yad --suppress-blank-empty --suppress-common-lines \
            node-modules-18*.txt node-modules-20*.txt
          echo -e "\nDiff results for 18 to 22"
          diff -yad --suppress-blank-empty --suppress-common-lines \
            yarn-cache-18*.txt yarn-cache-20*.txt
          diff -yad --suppress-blank-empty --suppress-common-lines \
            node-modules-18*.txt node-modules-20*.txt
          echo -e "\nDiff results for 20 to 22"
          diff -yad --suppress-blank-empty --suppress-common-lines \
            yarn-cache-20*.txt yarn-cache-22*.txt
          diff -yad --suppress-blank-empty --suppress-common-lines \
            node-modules-20*.txt node-modules-22*.txt

  OfflineTest:
    runs-on: ubuntu-latest
    needs: [Date, Collect, MakeISO]
    permissions:
      contents: write
      pull-requests: read
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download ISO and hash
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso*
          merge-multiple: true 

      - name: Validate Hashes
        run: |
          echo -e "\nFigure out how to check both isos here"
          ls -Alht

      - name: Mount ISO
        run: sudo mount -v -o loop ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso /mnt

      - name: UnTARchive Yarn Cache
        run: tar -xzvf /mnt/yarn-cache-${{ matrix.node-version }}-${{ needs.Date.outputs.Date }}.tgz

      - name: Run yarn install
        run: |
          echo -e "Setup Yarn for inaccessable network"
          npm set registry http://localhost:4873/
          yarn config set npmRegistryServer http://localhost:4873/
          echo -e "\nRun yarn install --immutable\n"
          yarn install --immutable

      - name: Run yarn install
        run: |
          echo -e "Run Yarn"
          yarn run

  Release:
    runs-on: ubuntu-latest
    needs: [Date, Collect, MakeISO, OfflineTest]
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -lh *tgz* *iso*

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        id: tag_create
        with:
          tag: ${{ needs.Date.outputs.Date }}
          github_token: ${{secrets.GITHUB_TOKEN}}
          tag_exists_error: false
          message: "Release for node-modules ${{ needs.Date.outputs.Date }} run"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Node Collection ${{ needs.Date.outputs.Date }}
          tag_name: ${{ needs.Date.outputs.Date }}
          make_latest: true
          files: |
            *.tgz
            *.zip
            *.txt
            *.iso
            *.sha

  Sharepoint:
    runs-on: ubuntu-latest
    needs: [Date, Collect, MakeISO]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -lh *tgz* *iso*

      - name: Send Files to Sharepoint
        uses: JacobsFederal/sharepoint-file-upload-action@pappasjfed-patch-1
        with:
          file_path: "*tgz*"
          host_name: "jacobsfederal.sharepoint.us"
          site_name: "USCMSNISSCII.DSO"
          upload_path: "${{ vars.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/${{ needs.Date.outputs.Date }}"
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: "login.microsoftonline.us"
          graph_endpoint: "graph.microsoft.us"

      - name: Send ISO to Sharepoint
        uses: JacobsFederal/sharepoint-file-upload-action@pappasjfed-patch-1
        with:
          file_path: "*.iso*"
          host_name: "jacobsfederal.sharepoint.us"
          site_name: "USCMSNISSCII.DSO"
          upload_path: "${{ vars.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/"
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: "login.microsoftonline.us"
          graph_endpoint: "graph.microsoft.us"
